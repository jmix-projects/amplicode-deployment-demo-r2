{
  "common.ok": "OK",
  "common.cancel": "Cancel",
  "common.close": "Close",
  "common.create": "Create",
  "common.edit": "Edit",
  "common.remove": "Remove",
  "common.submit": "Submit",
  "common.next": "Next",
  "common.back": "Back",
  "common.previous": "Previous",
  "common.requestFailed": "Request failed",
  "common.viewDetails": "View details",
  "common.404": "Sorry, we couldn't find the page you were looking for",
  "auth.login.unauthorized": "Login does not exist or incorrect password",
  "auth.login.unknownError": "Login failed",
  "auth.logout.confirm": "Are you sure you want to logout?",
  "auth.logout.unknownError": "Logout failed",
  "EntityListScreen.deleteConfirmation": "Are you sure you want to delete this record?",
  "EntityDetailsScreen.savedSuccessfully": "Saved successfully",
  "EntityDetailsScreen.validationError": "Validation Error. Please check the data you entered.",
  "EntityLookupField.selectEntityInstance": "Select entity instance",
  "screen.home": "Home",
  "screen.OwnerList": "Owner List",
  "screen.OwnerEditor": "Owner Editor",
  "userLogin": "test userSession.userLogin {userLogin}",
  "currentDate": "test currentDate {currentDate}",
  "currentTime": "test currentTime {currentTime}",
  "currentDateTime": "test currentDateTime {currentDateTime}",
  "firstYearDay": "test firstYearDay {firstYearDay}",
  "lastYearDay":  "test lastYearDay {lastYearDay}",
  "firstMonthDay": "test firstMonthDay {firstMonthDay}",
  "lastMonthDay":  "test lastMonthDay {lastMonthDay}",
  "firstWeekDay": "test firstWeekDay {firstWeekDay}",
  "lastWeekDay":  "test lastWeekDay {lastWeekDay}",
  "startPreviousDay": "test startPreviousDay {startPreviousDay}",
  "startNextDay": "test startNextDay {startNextDay}",
  "startCurrentHour": "test startCurrentHour {startCurrentHour}",
  "endCurrentHour": "test endCurrentHour {endCurrentHour}",
  "startCurrentMinute": "test startCurrentMinute {startCurrentMinute}",
  "endCurrentMinute": "test endCurrentMinute {endCurrentMinute}",
  "testedNumber": "test testedNumber {testedNumber}",
  "testedEntityProp": "test testedEntityProp {testedEntityProp}",
  "testedSomeComponentVariable": " test testedSomeComponentVariable {testedSomeComponentVariable}",
  "allTypesKey": "test date currentDateTime {currentDateTime} test number {testedNumber} city is {testedEntityProp}"
}
