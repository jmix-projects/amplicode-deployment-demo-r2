plugins {
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "org.flywaydb.flyway" version "7.11.4"
}

group = 'io.jmix2mvp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
    maven {
        url 'https://nexus.amplicode.com/repository/public/'
    }
    maven {
        url 'https://nexus.jmix.io/repository/public' //for YARG
    }
}

dependencyManagement {
    imports {
        mavenBom "com.amplicode.bom:amplicode-bom:0.1.0-SNAPSHOT"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.flywaydb:flyway-core'
    implementation 'io.leangen.graphql:graphql-spqr-spring-boot-starter:0.0.6'
    runtimeOnly 'com.graphql-java-kickstart:graphiql-spring-boot-starter:11.1.0'

    implementation 'org.modelmapper:modelmapper:2.4.4'

    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.amplicode.persistentmessages:amplicode-persistentmessages-starter'
    implementation 'org.liquibase:liquibase-core'

    runtimeOnly 'org.postgresql:postgresql'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

test {
    useJUnitPlatform()
}

flyway {
    url = 'jdbc:postgresql://localhost/petclinic'
    user = 'cuba'
    password = 'cuba'
}

bootBuildImage {
    if (rootProject.hasProperty('dockerTag')) {
        imageName = rootProject['dockerTag']
    } else {
        if (rootProject.hasProperty("includeFrontend")) {
            imageName = 'amplicode-petclinic-demo-r2:full'
        } else {
            imageName = 'amplicode-petclinic-demo-r2:backend'
        }
    }
}
